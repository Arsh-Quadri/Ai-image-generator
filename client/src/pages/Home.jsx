import React, { useState, useEffect } from "react";
import Card from "../components/Card";
import FormField from "../components/FormField";
import Loader from "../components/Loader";

const RenderCards = ({ data, title }) => {
  if (data.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = ({ darkMode }) => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState({});
  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState({});
  const [searchTimeout, setSearchTimeout] = useState(null);
  // console.log(allPosts);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch("http://localhost:8000/api/v1/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });
        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
          // console.log(result);
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  // console.log(allPosts);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResults);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl w-[85%] mx-auto">
      <div>
        <h1
          className={`font-extrabold ${
            darkMode ? "text-white" : "text-[#222328]"
          } `}
        >
          The Community Showcase
        </h1>
        <p className={`mt-2 ${darkMode ? "text-gray-300" : "text-[#666e75]"} `}>
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>
      <div className="mt-16">
        <FormField
          LableName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange}
          darkMode={darkMode}
        />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2
                className={`font-medium ${
                  darkMode ? "text-gray-400" : "text-[#666e75]"
                }  text-xl mb-3`}
              >
                Showing result for
                <span
                  className={`${darkMode ? "text-white" : "text-[#222328]"} `}
                >
                  {" "}
                  {searchText}
                </span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search result found"
                />
              ) : (
                <RenderCards data={allPosts} title="no posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
